{"version":3,"sources":["components/AuthForm.js","routes/Auth.js","fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","auth","getAuth","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","db","getFirestore","storage","getStorage","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","updateNweetRef","doc","id","updateDoc","onDeleteClick","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","e","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","nweetPosting","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","querySnapshot","nweetArray","docs","map","data","marginTop","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","where","getDocs","forEach","console","log","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7331705d.chunk.js","sourcesContent":["import {\n  createUserWithEmailAndPassword,\n  getAuth,\n  signInWithEmailAndPassword,\n} from \"@firebase/auth\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // 계정생성 및 로그인 정보 제출\n  const onSubmit = async (event) => {\n    const auth = getAuth();\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await createUserWithEmailAndPassword(auth, email, password);\n      } else {\n        await signInWithEmailAndPassword(auth, email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // 로그인 폼 작성\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  // 계정 생성, 로그인 토글\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"계정 생성\" : \"로그인\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span className=\"authSwitch\" onClick={toggleAccount}>\n        {newAccount ? \"로그인\" : \"계정 생성\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport {\n  getAuth,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  // 소셜 로그인\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    const auth = getAuth();\n    await signInWithPopup(auth, provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          구글 로그인하기 <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          깃허브 로그인하기 <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCpV2D1_Dy0iNBMDtGQOzzFL7rxHxOQAS8\",\n  authDomain: \"nwitter-5862e.firebaseapp.com\",\n  projectId: \"nwitter-5862e\",\n  storageBucket: \"nwitter-5862e.appspot.com\",\n  messagingSenderId: \"611557589893\",\n  appId: \"1:611557589893:web:bfec52ac95d36311263aec\",\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const db = getFirestore();\nexport const storage = getStorage(app);\n","import { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { db, storage } from \"../fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  // 수정한 느윗 업데이트\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const updateNweetRef = doc(db, \"Nweets\", `${nweetObj.id}`);\n    await updateDoc(updateNweetRef, {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  // 느윗 수정\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  // 느윗 삭제\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"정말 이 느윗을 삭제하시겠습니까?\");\n    if (ok) {\n      await deleteDoc(doc(db, \"Nweets\", `${nweetObj.id}`));\n      await deleteObject(ref(storage, nweetObj.attachmentUrl));\n    }\n  };\n\n  // 에디트 모드 전환\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"느윗을 수정하세요.\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"느윗 업데이트\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            취소\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addDoc, collection } from \"@firebase/firestore\";\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\nimport { db, storage } from \"../fbase\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\"); // 데이터 추가\n  const [attachment, setAttachment] = useState(\"\"); // 업로드 파일\n\n  // 느윗 업로드\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      //파일 경로 참조 만들기\n      const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\n      //storage 참조 경로로 파일 업로드 하기\n      const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\n      //storage에 있는 파일 URL로 다운로드 받기\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\n    }\n    //트윗할때, 메시지와 사진도 같이 firestore에 생성\n    const nweetPosting = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await addDoc(collection(db, \"Nweets\"), nweetPosting);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  // 느윗 작성\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  //업로드 파일 미리보기\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"어떤 생각을 하고 있으세요?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport Nweet from \"../components/Nweet\";\nimport { db } from \"../fbase\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]); // 데이터 일기\n\n  // 리얼타임으로 느윗 데이터 읽기\n  useEffect(() => {\n    const q = query(collection(db, \"Nweets\"), orderBy(\"createdAt\"));\n    onSnapshot(q, (querySnapshot) => {\n      const nweetArray = querySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { getAuth, updateProfile } from \"firebase/auth\";\nimport { useHistory } from \"react-router\";\nimport {\n  collection,\n  getDocs,\n  orderBy,\n  query,\n  where,\n} from \"@firebase/firestore\";\nimport { db } from \"../fbase\";\nimport { useState } from \"react/cjs/react.development\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const auth = getAuth();\n  const history = useHistory();\n  const onLogOutClick = () => {\n    auth.signOut();\n    history.push(\"/\");\n  };\n  const getMyNweets = async () => {\n    const q = query(\n      collection(db, \"Nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\")\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      console.log(doc.id, \" => \", doc.data());\n    });\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, { displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"프로필 업데이트\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        로그아웃\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/Profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}의 프로필` : \"프로필\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/Profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({ ...user });\n    setUserObj(user);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}